db.customers.find({},{city:1,state:1})
db.customers.find({},{city:1,state:1,_id:0})
db.fooditems.find({},{name:1,cuisine:1,_id:0})
db.fooditems.find({name:'pizza'})
db.fooditems.find({name:'pizza'},{_id:1})
db.fooditems.find({$ne:'pizza'})
db.fooditems.find(cuisine:{$ne:'pizza'})
db.fooditems.find({name:{$ne:'pizza;}})
db.fooditems.find({name:{$ne:'pizza'}})
db.fooditems.find({name:'pizza',cuisine:'pizza'})
db.fooditems.find({$or:[{name:'noodles'},{cuisine:'pizza'}]})
db.fooditems.find({price:{$gt:50}})
db.fooditems.find({name:/izz/})
db.fooditems.find({name:/^p/})
db.fooditems.find({}).sort({_id:1})
db.fooditems.find({}).sort({_id:-1})
db.fooditems.count()
db.fooditem.count({_id:{$exists:true}})
db.fooditems.count({_id:{$exists:true}})
db.fooditems.distinct(_id);
db.fooditems.distinct('_id');
db.fooditems.limit(1)
db.fooditems.find().limit(1)
db.fooditems.find().limit(1).skip(1)
db.fooditems.updateMany({name:'noodles'},{$set:{price:200}})
use zomato_app
db.fooditems.update({name:'pizza'},{$set:{price:250}})
db.fooditems.find()
db.fooditems.update({name:'pizza'},{$inc:{price:3}})
db.fooditems.find()
use zomato_app
db.customers.find()
db.orders.find()
db.fooditems.find({}).pretty()
db.orders.find()
db.orders.find().pretty()
db.customers.find().pretty()
use zomato_app
use zomato_app
db.customers.aggregate([{$lookup:{from:'orders',localField:ObjectId("5bd580112a4aab1e29b60b26"),foreignField:ObjectId("5bd580112a4aab1e29b60b26"),as:'ANSWER'}}])
db.customers.aggregate([{$lookup:{from:'orders',localField:'ObjectId("5bd580112a4aab1e29b60b26")',foreignField:'ObjectId("5bd580112a4aab1e29b60b26")',as:'ANSWER'}}])
db.customers.aggregate([{$lookup:{from:'orders',localField:'_id',foreignField:'_id',as:'ANSWER'}}])
db.customers.aggregate([{$lookup:{from:'orders',localField:'_id',foreignField:'_id',as:'ans'}}])
db.customers.aggregate([{$lookup:{from:'order',localField:'_id',foreignField:'_id',as:'ans'}}])
db.orders.find()
use zomato_app
db.orders.find()
db.orders.find().pretty()
db.orders.find({order_date:{$gte:new ISODate("2017-10-29T05:34:50.158Z"),$lte:new ISODate(("2018-11-29T05:34:50.158Z"))}})
db.orders.find({order_date:{$gte:new ISODate("2017-10-29T05:34:50.158Z"),$lte:new ISODate(("2018-11-29T05:34:50.158Z"))}}).count()
db.orders.find({order_date:{$gte:new ISODate("2017-10-29T05:34:50.158Z"),$lte:new ISODate(("2018-11-29T05:34:50.158Z"))}}).count().pretty()
db.orders.find({order_date:{$gte:new ISODate("2017-10-29T05:34:50.158Z"),$lte:new ISODate(("2018-11-29T05:34:50.158Z"))}}).pretty()
function view_all(){ db.customers.find() }
;
use zomato_app
view_all()
function view_all(){ db.customers.find(); }
view_all()
function view_all(){ console.log(db.customers.find()); }
view_all()
function view_all(){ return(db.customers.find()); }
view_all()
function view_particular(Object collection){ return db.collection.find(); }
function runSP(numberVal,aCollection){ var coll=db[aCollection]; coll.find(); }
runSP(2,orders);
runSP(2,"orders");
function runSP(numberVal,aCollection){ var coll=db[aCollection]; returncoll.find(); }
runSP(1,"orders");
use zomato_app
function runSP(numberVal,aCollection){ var coll=db[aCollection]; return coll.find(); }
runSP(1,'orders');
runSP(3,'orders');
function runSP(aCollection){ var coll=db[aCollection]; return coll.find();}
runSP('customers');
runSP('customers').pretty();
runSP('orders').pretty();
function changeCuisine(newCuisine){ db.restaurants.find(;cuisine: )}
function changeCuisine(oldCuisisne,newCuisine){ db.restaurants.find(;cuisine: )}
function changeCuisine(oldCuisisne,newCuisine){ db.restaurants.find({cuisine:oldCuisine},{$set:{cuisine:newCuisine}} )}
db.restaurants.find().pretty()
changeCuisine('FOODPLACE','NEWPLACE');
function changeCuisine(String oldCuisisne,String newCuisine){ db.restaurants.find({cuisine:oldCuisine},{$set:{cuisine:newCuisine}} )}
function hello(name){ return name;}
hello('HI');
function changeCuisine(old,new){ return db.restaurants.find();}
function changeCuisine(oldC,newC){ return db.restaurants.find();}
changeCuisine('hey','hey')
function changeCuisine(oldC,newC){ return db.restaurants.find({cuisine:oldC},{$set:{cuisine:newC}});}
changeCuisine('FOODPLACE','NEWPLACE');
db.restaurants.find()
function changeCuisine(oldC,newC){ return db.restaurants.find({city:oldC},{$set:{city:newC}});}
changeCuisine('FOODPLACE','NEWPLACE');
function changeCuisine(oldC,newC){ return db.restaurants.update({city:oldC},{$set:{city:newC}});}
changeCuisine('FOODPLACE','NEWPLACE');
function changeCity(oldC,newC){ return db.restaurants.update({city:oldC},{$set:{city:newC}});}
changeCuisine('NEWPLACE','FOODPLACE');
function findCustomer(name){ return db.customers.find({username:name}) }
findCustomer('losewin');
findCustomer('losewin').pretty();
